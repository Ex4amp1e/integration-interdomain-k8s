---
name: ci
on:
  pull_request:
  push:
    branches:
      - "release/**"
jobs:
  yamllint:
    uses: networkservicemesh/.github/.github/workflows/yamllint.yaml@main

  shellcheck:
    uses: networkservicemesh/.github/.github/workflows/shellcheck.yaml@main

  golangci-lint:
    uses: networkservicemesh/.github/.github/workflows/golangci-lint.yaml@main

  exclude-fmt-errorf:
    uses: networkservicemesh/.github/.github/workflows/exclude-fmt-errorf.yaml@main

  checkgomod:
    uses: networkservicemesh/.github/.github/workflows/checkgomod.yaml@main

  cloudtest:
    runs-on: ubuntu-latest
    env:
      KUBERNETES_VERSION: ${{ secrets.NSM_KUBERNETES_VERSION }}
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        with:
          path: ${{ github.repository }}
      - name: Install azure-cli
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az version
      - name: Set up azure permissions
        run: |
          sudo chmod -R 777 ~/.azure
      - name: Install gcloud-sdk
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
      - name: Set up /bin permissions
        run: |
          sudo chmod -R 777 /bin
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
          github-token: ${{ github.token }}
      - name: setup env
        run: |
          echo GOPATH=$GITHUB_WORKSPACE >> $GITHUB_ENV
          echo GO111MODULE=on >> $GITHUB_ENV
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH
      - name: Get cloudtest
        run: go get github.com/networkservicemesh/cloudtest@master
      - name: Get kind
        run: go get sigs.k8s.io/kind@v0.11.1
      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Run interdomain testing
        run: |
          cloudtest
        env:
          AZURE_SERVICE_PRINCIPAL: ${{ secrets.AZURE_SERVICE_PRINCIPAL }}
          AZURE_SERVICE_PRINCIPAL_SECRET: ${{ secrets.AZURE_SERVICE_PRINCIPAL_SECRET }}
          AZURE_TENANT: ${{ secrets.AZURE_TENANT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-west-2"
          PACKET_AUTH_TOKEN: ${{ secrets.PACKET_AUTH_TOKEN }}
          PACKET_PROJECT_ID: ${{ secrets.PACKET_PROJECT_ID }}
          KUBERNETES_VERSION: ${{ secrets.NSM_KUBERNETES_VERSION }}
          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
          GCLOUD_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Publish test report
        uses: mikepenz/action-junit-report@v2.1.0
        if: ${{ always() }}
        with:
          report_paths: "**/cloud_test/results/junit.xml"
          suite_regex: "Test*"
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload logs
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: logs-${{ github.run_number }}
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/.tests/cloud_test/

  packet-cleanup:
    name: packet cleanup
    runs-on: ubuntu-latest
    needs:
      - cloudtest
    if: ${{ always() }}
    steps:
      - name: Set up /bin permissions
        run: |
          sudo chmod -R 777 /bin
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Clean up packet
        run: |
          go get github.com/networkservicemesh/cloudtest/pkg/providers/packet/packet_cleanup@master
          packet_cleanup -k y -c y --cluster-prefix "interdomain"
        env:
          GO111MODULE: on
          GOBIN: /bin
          PACKET_AUTH_TOKEN: ${{ secrets.PACKET_AUTH_TOKEN }}
          PACKET_PROJECT_ID: ${{ secrets.PACKET_PROJECT_ID }}
